openapi: 3.0.1

servers:
- url: https://resources.operationcode.org/api/v1
  description: Default Server
info:
  title: Operation Code Resources API
  version: '1.0'
  x-logo:
    url: 'https://operation-code-assets.s3.us-east-2.amazonaws.com/branding/logos/small-blue-logo.png'
    altText: 'Operation Code Logo'
    backgroundColor: '#252e3e'
    href: 'https://operationcode.org/contact'
  description: |
    # Introduction
    Operation Code Resources API is a collection of programming and cyber security learning resources curated by and for the Operation Code community.

    # Authentication
    Create (POST) and update (PUT) routes are protected and require an API key. API key requests to the `/apikey` endpoint require valid Operation Code credentials in the request body.

    If you are not already a member of our community, join Operation Code [HERE](https://operationcode.org/join).

    When you create a request to an authenticated route, you *MUST* include the header `x-apikey` along with your API key.

    # Versioning
    To ensure contracts with the api are not broken with future updates, you may supply a version number in your request header.
    Include an `X-Api-Version` header with a valid version in your request:
      ```
      X-Api-Version: 1.0
      ```
    ### Default Versions
    By default, any non-versioned request will default to the newest version of the API. Users of the API are strongly encouraged to specify the requested version to avoid unexpected changes when new versions are added.


  contact:
    name: Operation Code
    url: https://operationcode.org/contact

paths:
  /apikey:
    post:
      summary: API Key Request
      description: Request API key by providing valid Operation Code credentials
      tags:
        - Request Key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyRequest'
        required: true
      responses:
        200:
          description: API key response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
              example:
                apiVersion: '1.0'
                credentials:
                  apikey: '1234567890'
                  email: 'your@email.com'
                status: 'ok'
                status_code: 200
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          description: Unauthorized Access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                apiVersion: '1.0'
                errors:
                  unauthorized:
                    message: 'The email or password you submitted is incorrect'
                status: 'Unauthorized'
                status_code: 401

  /apikey/rotate:
    post:
      summary: API Key Rotation
      description: Rotate the API key provided in the x-apikey header
      tags:
        - Rotate Key
      responses:
        200:
          description: API key rotation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
              example:
                apiVersion: '1.0'
                credentials:
                  apikey: '1234567890'
                  email: 'your@email.com'
                status: 'ok'
                status_code: 200
        401:
          $ref: '#/components/responses/UnauthorizedNoApiKey'

  /search:
    get:
      summary: Search
      description: Searches for resources containing a given keyword. For example, to search for any resource containing the term `binary trees`, make a `GET` request to `search?q=binary trees` Note&#58; The `page` attribute in the response of the `/search` endpoint begins with `0`, but the `page` attribute in the response of the `List Resources` endpoint begins with `1`.
      tags:
        - Search
      parameters:
        - in: query
          name: q
          description: Keyword(s) to search for across all of the data
          schema:
            type: string
          required: true
        - in: query
          name: paid
          required: false
          description: Whether the resource is paid or not. To search for *free* resources, make a `GET` request to `/search?paid=false`.
          schema:
            type: boolean
        - in: query
          name: languages
          required: false
          description: Language(s) of the resource to search. For example, to filter for JavaScript and Python resources, make a `GET` request to `/search?languages=python&languages=javascript`.
          schema:
            type: array
        - in: query
          name: category
          required: false
          description: Category of the resource. For example, to filter for book resources, make a `GET` request to `/search?category=books`.
          schema:
            type: string
      responses:
        200:
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              example:
                apiVersion: '1.0'
                resources:
                  - category': 'Tutorials'
                    created_at: '2019-05-25 18:52:15'
                    downvotes: 0
                    id: 953
                    languages:
                      - 'C'
                    last_updated: '2019-05-25 18:52:15'
                    name: 'C Tutorial'
                    notes: 'Learn C with our popular C tutorial, which will take you from the very basics of C all the way through sophisticated topics like binary trees and data structures.'
                    paid: false
                    times_clicked: 0
                    upvotes: 0
                    url: 'https://www.cprogramming.com/tutorial/c-tutorial.html'
                number_of_pages: 1
                page: 0
                records_per_page: 20
                status: 'ok'
                status_code: 200
                total_count: 1
        404:
          $ref: '#/components/responses/NotFound'
  /categories:
    get:
      summary: List Categories
      description: Gets a list of all available categories.
      tags:
        - List Categories
      responses:
        200:
          description: A list of categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
              example:
                  apiVersion: '1.0'
                  categories:
                    - id: 1
                      name: 'Books'
                    - id: 2
                      name: 'Code Challenges'
                    - id: 3
                      name: 'Getting Started'
                    - id: 4
                      name: 'Tutorials'
                    - id: 5
                      name: 'Online Courses'
                    - id: 6
                      name: 'Jobs'
                    - id: 7
                      name: 'Tools'
                    - id: 8
                      name: 'Programming for Kids'
                    - id: 9
                      name: 'REPL/Code Simulators'
                    - id: 10
                      name: 'Design'
                    - id: 11
                      name: 'Computer Hardware'
                    - id: 12
                      name: 'Computer Networking'
                    - id: 13
                      name: 'Cloud IDEs'
                    - id: 14
                      name: 'Docker'
                    - id: 15
                      name: 'Regular Expressions'
                    - id: 16
                      name: 'Mentorship'
                    - id: 17
                      name: 'News'
                    - id: 18
                      name: 'Back End Dev'
                    - id: 19
                      name: 'Mobile Dev'
                    - id: 20
                      name: 'Cheat Sheets'
                    - id: 21
                      name: 'Open Source'
                    - id: 22
                      name: 'Front End Dev'
                    - id: 23
                      name: 'Web Design'
                  status: 'ok'
                  status_code: 200
                  total_count: 23
        404:
          $ref: '#/components/responses/NotFound'
  /categories/{id}:
    get:
      summary: Get Category
      description: Gets more details about a specific category, given the Category ID
      tags:
        - Get Category
      parameters:
      - name: id
        in: path
        description: Category ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Category details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category_data'
              example:
                apiVersion: '1.0'
                category:
                  id: 1
                  name: 'Books'
                status: 'ok'
                status_code: 200
        404:
          $ref: '#/components/responses/NotFound'
  /languages:
    get:
      summary: List Languages
      description: Gets list of all available language entries.
      tags:
        - List Languages
      responses:
        200:
          description: A list of languages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
              example:
                apiVersion: '1.0'
                languages:
                  - id: 1
                    name: 'multiple'
                  - id: 2
                    name: 'Python'
                  - id: 3
                    name: 'Unix/Linux/*nix'
                  - id: 4
                    name: 'Bash'
                  - id: 5
                    name: 'C'
                  - id: 6
                    name: 'Sysadmin'
                  - id: 7
                    name: 'JavaScript'
                  - id: 8
                    name: 'HTML'
                  - id: 9
                    name: 'PHP'
                  - id: 10
                    name: 'Ruby'
                  - id: 11
                    name: 'Aspectwerkz'
                  - id: 12
                    name: 'Artificial Intelligence'
                  - id: 13
                    name: 'C++'
                  - id: 14
                    name: 'MongoDB'
                  - id: 15
                    name: 'SQL'
                  - id: 16
                    name: 'R'
                  - id: 17
                    name: 'GraphQL'
                  - id: 18
                    name: 'Swift'
                  - id: 19
                    name: 'Android'
                  - id: 20
                    name: 'CSS'
                  - id: 21
                    name: 'jQuery'
                  - id: 22
                    name: 'Git'
                status: 'ok'
                status_code: 200
                total_count: 22
        404:
          $ref: '#/components/responses/NotFound'
  /languages/{id}:
    get:
      summary: Get Language
      description: Gets more details about a specific language, given the language ID
      tags:
        - Get Language
      parameters:
      - name: id
        in: path
        description: Language ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Language details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language_data'
              example:
                apiVersion: '1.0'
                language:
                  id: 2
                  name: 'Python'
                status: 'ok'
                status_code: 200
        404:
          $ref: '#/components/responses/NotFound'
  /resources/{id}:
    get:
      summary: Get Resource
      description: Gets more details about a specific resource, given the resource ID
      tags:
        - Get Resource
      parameters:
      - name: id
        in: path
        description: Resource ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Resource details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
              example:
                apiVersion: '1.0'
                resource:
                  category: 'Books'
                  created_at: '2019-06-15 17:55:32'
                  downvotes: 0
                  id: 3
                  languages: []
                  last_updated: '2019-06-15 17:55:32'
                  name: 'Free Tech Books'
                  notes: 'Focuses on general computer science concepts rather than a specific language'
                  paid: false
                  times_clicked: 0
                  upvotes: 0
                  url: 'http://www.freetechbooks.com/'
                status: 'ok'
                status_code: 200
        404:
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update Resource
      description: Updates an existing learning resource entry. The request body should be a JSON object containing the properties to be updated and their corresponding new values.
      tags:
        - Update Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRequest'
            example:
              name: 'Updated Book Title'
        required: true
      parameters:
        - name: id
          in: path
          description: Resource ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
              example:
                apiVersion: '1.0'
                resource:
                  category: 'Tutorial'
                  created_at: '2019-07-21 15:41:19'
                  downvotes: 0
                  id: 2137
                  languages: []
                  last_updated: '2019-07-22 16:05:53'
                  name: 'Updated Book Title'
                  notes: null
                  paid: false
                  times_clicked: 3
                  upvotes: 1
                  url: 'http://www.test.com'
                status: 'ok'
                status_code: 200
        404:
          $ref: '#/components/responses/NotFound'
        401:
          $ref: '#/components/responses/UnauthorizedNoApiKey'
        422:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                apiVersion: '1.0'
                errors:
                  invalid-params:
                      message: 'The following params were invalid: url. Resource id 2137 already has this URL.'
                      params:
                        - 'url'
                      resource: 'https://resources.operationcode.org/api/v1/2137'
                status: 'Unprocessable Entity'
                status_code: 422
      security:
      - ApiKeyAuth: []
  /resources/{id}/click:
    put:
      summary: Update Resource - Increment Number of Views
      description: |
        Increments the `times_clicked` property of a resource. The intention of this endpoint is to collect data about how popular a resource is based on how many times it is accessed. Please set up your integration to increment the `times_clicked` property when a user clicks through to view a resource.
      tags:
        - Update Resource
      parameters:
      - name: id
        in: path
        description: Resource ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Updated resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_data'
              example:
                apiVersion: '1.0'
                resource:
                    category: 'Books'
                    created_at: '2019-04-28 22:18:34'
                    downvotes: 0
                    id: 10
                    languages: []
                    last_updated: '2019-07-26 13:47:52'
                    name: 'Thinking Forth'
                    notes: null
                    paid: false
                    times_clicked: 2
                    upvotes: 0
                    url: 'http://thinking-forth.sourceforge.net/'
                status: 'ok'
                status_code: 200
        404:
          $ref: '#/components/responses/NotFound'

  /resources/{id}/upvote:
    put:
      summary: Upvote Resource
      description: |
        Increments the `upvotes` property of a resource. If the user has already upvoted the resource, `upvotes` property will decrement since a user is limited to only one vote per resource. Also, if the user has already downvoted the resource, hitting this endpoint will increment `upvotes` property while decrementing `downvotes` property.
      tags:
        - Update Resource
      parameters:
        - name: id
          in: path
          description: Resource ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Upvoted resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_data'
              example:
                apiVersion: '1.0'
                resource:
                  category: 'Books'
                  created_at: '2020-01-07 22:06:45'
                  downvotes: 0
                  id: 5
                  languages: []
                  last_updated: '2020-03-12 23:17:52'
                  name: 'Teach Your Kids to Code'
                  notes: null
                  paid: true
                  times_clicked: 0
                  upvotes: 1
                  url: 'http://teachyourkidstocode.com/'
                status: 'ok'
                status_code: 200
        404:
          $ref: '#/components/responses/NotFound'

  /resources/{id}/downvote:
    put:
      summary: Downvote Resource
      description: |
        Increments the `downvotes` property of a resource. If the user has already downvoted the resource, `downvotes` property will decrement since a user is limited to only one vote per resource. Also, if the user has already upvoted the resource, hitting this endpoint will increment `downvotes` property while decrementing `upvotes` property.
      tags:
        - Update Resource
      parameters:
        - name: id
          in: path
          description: Resource ID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Downvoted resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_data'
              example:
                apiVersion: '1.0'
                resource:
                  category: 'Books'
                  created_at: '2020-01-07 22:06:45'
                  downvotes: 1
                  id: 5
                  languages: []
                  last_updated: '2020-03-12 23:17:52'
                  name: 'Teach Your Kids to Code'
                  notes: null
                  paid: true
                  times_clicked: 0
                  upvotes: 0
                  url: 'http://teachyourkidstocode.com/'
                status: 'ok'
                status_code: 200
        404:
          $ref: '#/components/responses/NotFound'

  /resources:
    get:
      summary: List Resources
      description: Gets list of all available resource entries or filtered entries based on provided criteria. Note&#58; The `page` attribute in the response of the `/search` endpoint begins with `0`, but the `page` attribute in the response of the `List Resources` endpoint begins with `1`.
      tags:
        - List Resources
      parameters:
        - in: query
          name: paid
          required: false
          description: Whether the resource is paid or not. To search for *free* resources, make a `GET` request to `/resources?paid=false`.
          schema:
            type: boolean
        - in: query
          name: languages
          required: false
          description: Language(s) of the resource. For example, to filter for Python and JavaScript resources, make a `GET` request to `/resources?languages=python&languages=javascript`
          schema:
            type: string
        - in: query
          name: category
          required: false
          description: Category of resource. For example, to filter for book resources, make a `GET` request to `/resources?category=books`.
          schema:
            type: string
        - in: query
          name: updated_after
          required: false
          description: Filters resources that were updated after the specified date. To get all resources updated after July 17, 2019, use `/resources?updated_after=2019-07-17`
          schema:
            type: string
            format: date-time

      responses:
        200:
          description: A list of resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredResourcesResponse'
              example:
                apiVersion: '1.0'
                resources:
                  - category': 'Tutorial'
                    created_at: '2019-07-21 15:41:19'
                    downvotes: 0
                    id: 2137
                    languages: []
                    last_updated: '2019-07-22 17:39:50'
                    name: 'Some, but not ALL of the knowledge'
                    notes: null
                    paid: false
                    times_clicked: 3
                    upvotes: 1
                    url: 'http://www.test.com'
                has_next: false
                has_prev: false
                number_of_pages: 1
                page: 1
                records_per_page: 20
                status: 'ok'
                status_code: 200
                total_count: 1
        404:
          $ref: '#/components/responses/NotFound'

        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                apiVersion: '1.0'
                errors:
                  unprocessable-entity:
                    message: 'The value for "updated_after" is invalid'
                status: 'Unprocessable Entity'
                status_code: 422

    post:
      summary: Create Resources
      description: Creates new learning resources. The structure of the request is a list of resource objects. The required properties for each new resource are `category`, `name`, `paid`, and `url`.
      tags:
        - Create Resources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourcesRequest'
            example:
              - category: 'Tutorial'
                name: 'CSS Tutorial'
                paid: false
                url: 'https://www.w3schools.com/css/'
        required: true
      responses:
        200:
          description: Created resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_list'
              example:
                apiVersion: '1.0'
                resources:
                  - category: 'Tutorial'
                    created_at: '2019-07-21 15:41:19'
                    downvotes: 0
                    id: 2137
                    languages:
                      - 'CSS'
                    last_updated: '2019-07-22 16:05:53'
                    name: 'CSS Tutorial'
                    notes: null
                    paid: false
                    times_clicked: 3
                    upvotes: 1
                    url: 'https://www.w3schools.com/css/'
                status: 'ok'
                status_code: 200
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedNoApiKey'
        422:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_list'
              example:
                  apiVersion: '1.0'
                  errors:
                    - index: 0
                      invalid-params:
                        message: 'The following params were invalid: url. Resource id 2137 already has this URL.'
                        params:
                          - url
                        resource: 'https://resources.operationcode.org/api/v1/2137'
                      missing-params:
                          message: 'The following params were missing: name, category, paid.'
                          params:
                            - name
                            - category
                            - paid
                  status: 'Unprocessable Entity'
                  status_code: 422
      security:
      - ApiKeyAuth: []

components:
  schemas:

    Error:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version
        errors:
          $ref: '#/components/schemas/Error_data'
        status:
          type: string
          description: Status message
        status_code:
          type: integer
          description: Status code
    Error_data:
      type: object
      description: The response errors
      properties:
        missing-params:
          type: object
          properties:
            params:
              description: The associated parameters.
              type: array
              items:
                type: string
            message:
              description: Error message
              type: string
        invalid-params:
          type: object
          properties:
            params:
              description: The associated parameters.
              type: array
              items:
                type: string
            message:
              description: Error message
              type: string
            resource:
              description: An href link to the resource with a duplicate url
              type: string
        unauthorized:
          type: object
          properties:
            message:
              description: Error message
              type: string
        missing-body:
          type: object
          properties:
            message:
              description: Error message
              type: string
        unprocessable-entity:
          type: object
          properties:
            message:
              description: Error message
              type: string
        bad-request:
          type: object
          properties:
            message:
              description: Error message
              type: string
        not-found:
          type: object
          properties:
            message:
              description: Error message
              type: string
    Error_list:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version
        errors:
          $ref: '#/components/schemas/Error_list_data'
        status:
          type: string
          description: Status message
        status_code:
          type: integer
          description: Status code

    Error_list_data:
      type: array
      items:
        type: object
        properties:
          index:
            type: integer
            description: The index of the invalid resource
          missing-params:
            type: object
            properties:
              params:
                description: The associated parameters.
                type: array
                items:
                  type: string
              message:
                description: Error message
                type: string
          invalid-params:
            type: object
            properties:
              params:
                description: The associated parameters.
                type: array
                items:
                  type: string
              message:
                description: Error message
                type: string
              resource:
                description: An href link to the resource with a duplicate url
                type: string
          unauthorized:
            type: object
            properties:
              message:
                description: Error message
                type: string
          missing-body:
            type: object
            properties:
              message:
                description: Error message
                type: string
          unprocessable-entity:
            type: object
            properties:
              message:
                description: Error message
                type: string
          bad-request:
            type: object
            properties:
              message:
                description: Error message
                type: string
          not-found:
            type: object
            properties:
              message:
                description: Error message
                type: string


    Resource:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version
        resource:
          $ref: '#/components/schemas/Resource_data'
        status:
          type: string
          description: Status message
        status_code:
          type: integer
          description: Status code

    Category:
      type: object
      properties:
        apiVersion:
          type: string
        category:
          $ref: '#/components/schemas/Category_data'
        status:
          type: string
          description: Status message
        status_code:
          type: integer
          description: Status code
        total_count:
          type: integer
    Category_data:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: Category ID
          name:
            type: string
            description: Category name

    Language:
      type: object
      description: Language or topic presented in the resource
      properties:
        apiVersion:
          type: string
          description: API version
        languages:
          $ref: '#/components/schemas/Language_data'
        status:
          type: string
          description: Status message
        status_code:
          type: integer
          description: Status code
        total_count:
          type: integer
          description: Total languages retrieved
    Language_data:
      type: object
      properties:
        id:
          type: integer
          description: Language ID
        name:
          type: string
          description: Language Name


    CreateResourcesRequest:
      allOf:
        - $ref: '#/components/schemas/ResourcesRequest'
        # - required: [category, name, paid, url]

    ResourcesRequest:
      type: array
      items:
        type: object
        properties:
          category:
            type: string
            description: Category
          languages:
            type: array
            description: List of languages
            items:
              type: string
          name:
            type: string
            description: Resource name
          notes:
            type: string
            description: Resource notes
          paid:
            type: boolean
            description: True or false for whether resource is paid
          url:
            type: string
            description: Resource url
    ResourceRequest:
      type: object
      properties:
        category:
          type: string
          description: Category
        languages:
          type: array
          description: List of languages
          items:
            type: string
        name:
          type: string
          description: Resource name
        notes:
          type: string
          description: Resource notes
        paid:
          type: boolean
          description: True or false for whether resource is paid
        url:
          type: string
          description: Resource url

    Resource_data:
      type: object
      properties:
        category:
          type: string
          description: Category
        created_at:
          type: string
          format: date-time
          description: Date created
        downvotes:
          type: integer
          description: Negative ratings
        id:
          type: integer
          description: Resource ID
        last_updated:
          type: string
          format: date-time
          description: Date updated
        languages:
          type: array
          description: List of languages
          items:
            type: string
        name:
          type: string
          description: Resource name
        notes:
          type: string
          description: Resource notes
        paid:
          type: boolean
          description: True or false for whether resource is paid
        upvotes:
          type: integer
          description: Positive ratings
        url:
          type: string
          description: Resource url

    Resource_list:
      type: array
      items:
        $ref: '#/components/schemas/Resource_data'

    SearchResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource_data'
        number_of_pages:
          type: integer
          description: Total pages
        page:
          type: integer
          description: Current page
        records_per_page:
          type: integer
          description: Records per page
        status:
          type: string
          description: Status message
        status_code:
          type: integer
          description: Status code
        total_count:
          type: integer
          description: Total resources retrieved

    FilteredResourcesResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource_data'
        has_next:
          type: boolean
          description: Additional pages
        has_previous:
          type: boolean
          description: Previous pages
        number_of_pages:
          type: integer
          description: Total pages
        page:
          type: integer
          description: Current page
        records_per_page:
          type: integer
          description: Records per page
        status:
          type: string
          description: Status message
        status_code:
          type: integer
          description: Status code
        total_count:
          type: integer
          description: Total resources retrieved

##############################
# API Request and Response
##############################
    ApiKeyRequest:
      type: object
      properties:
        email:
          type: string
          description: A valid e-mail address registered with Operation Code
        password:
          type: string
          description: Password
    ApiKeyResponse:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version
        credentials:
          $ref: '#/components/schemas/ApiKeyResponse_data'
        status:
          type: string
          description: Status message
        status_code:
          type: integer
          description: Status code
    ApiKeyResponse_data:
      type: object
      properties:
        apikey:
          type: string
          description: API key
        created_at:
          type: string
          format: date-time
          description: Date created
        email:
          type: string
          description: E-mail address
        last_updated:
          type: string
          format: date-time
          description: Date updated

##############################
# Error Responses
##############################
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            apiVersion: '1.0'
            errors:
              not-found:
                message: 'The resource you requested does not exist.'
            status: 'Not Found'
            status_code: 404

    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: |
            {
              'apiVersion': '1.0',
              'errors': {
                'unauthorized': {
                  'message': 'The email or password you submitted is incorrect'
                }
              },
              'status': 'Unauthorized',
              'status_code': 401
            }

    UnauthorizedNoApiKey:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            apiVersion: '1.0'
            errors:
              unauthorized:
                message: 'You must provide a valid API token in the x-apikey header.'
            status: 'Unauthorized'
            status_code: 401

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            apiVersion: '1.0'
            errors:
              bad-request:
                message: "400 Bad Request: Failed to decode JSON object: Expecting ',' delimiter: line 3 column 2 (char 25)"
            status: 'Bad Request'
            status_code: 400

  securitySchemes:
    ApiKeyAuth:
      description: API key authentication
      type: apiKey
      name: x-apikey
      in: header

##################
# Groups and Tags
##################
tags:
  - name: List Resources
  - name: Get Resource
  - name: Create Resources
  - name: Update Resource
  - name: List Categories
  - name: Get Category
  - name: List Languages
  - name: Get Language
  - name: Search
  - name: Request Key
x-tagGroups:
  - name: API Key Request
    tags:
      - Request Key
  - name: Search
    tags:
      - Search
  - name: Resources
    tags:
      - List Resources
      - Get Resource
      - Create Resources
      - Update Resource
  - name: Categories
    tags:
      - List Categories
      - Get Category
  - name: Languages
    tags:
      - List Languages
      - Get Language
